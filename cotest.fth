\ Tests for conditions

VARIABLE PREVIOUS-DEPTH   VARIABLE TEST-DEPTH
CREATE TEST-STACK   16 CELLS ALLOT
: T{   DEPTH PREVIOUS-DEPTH ! ;
: ->   DEPTH PREVIOUS-DEPTH @ -   DUP TEST-DEPTH !
  CELLS TEST-STACK TUCK + >R   BEGIN   DUP R@ U< WHILE   TUCK !
  CELL+ REPEAT   DROP RDROP ;
: }T   DEPTH PREVIOUS-DEPTH @ -   DUP TEST-DEPTH @ <>
  ABORT" Stack depth differs"   CELLS TEST-STACK TUCK + >R
  BEGIN   DUP R@ U< WHILE   TUCK @ <>
  ABORT" Stack contents differ"   CELL+ REPEAT   DROP RDROP ;

\ THROW and CATCH

: TEST-NOTHROW   ;
: TEST-NOCATCH   ['] TEST-NOTHROW CATCH ;
T{ TEST-NOCATCH -> 0 }T

: TEST-UNDERTHROW   >F THROW ;
: TEST-UNDERCATCH   1 2 >F 3   ['] TEST-UNDERTHROW CATCH AND   F> ;
T{ TEST-UNDERCATCH -> 1 2 }T

: TEST-OVERTHROW   4 5 THROW ;
: TEST-OVERCATCH   3   ['] TEST-OVERTHROW CATCH AND ;
T{ TEST-OVERCATCH -> 3 4 5 }T

: TEST-NESTTHROW   TEST-NOCATCH TEST-UNDERCATCH
  TEST-OVERCATCH THROW ;
: TEST-NESTCATCH   -2 -1 ['] TEST-NESTTHROW CATCH AND ;
T{ TEST-NESTCATCH -> -2 -1 0 1 2 3 4 5 }T

\ SIGNAL, HANDLE, and DECLINE

: TEST-HANDLE-S   2 SIGNAL ;
: TEST-HANDLE-H   DROP 1 - ;
: TEST-HANDLE  ['] TEST-HANDLE-S ['] TEST-HANDLE-H HANDLE
  HANDLER @ FP0 = AND ;
T{ TEST-RESPOND -> 1 }T

: TEST-DECLINE-S   1 SIGNAL ;
: TEST-DECLINE-H   3 SWAP DECLINE ;
: TEST-DECLINE-T   ['] TEST-DECLINE-S ['] TEST-DECLINE-H HANDLE ;
: TEST-DECLINE   ['] TEST-DECLINE-T ['] TEST-HANDLE-H HANDLE
  HANDLER @ FP0 = AND ;
T{ TEST-DECLINE -> 1 2 }T

\ OFFER and AGREE

: TEST-NOAGREE-A   DROP ;
: TEST-NOAGREE   ['] TEST-NOAGREE-A OFFER ;
T{ TEST-NOAGREE -> 0 }T

: TEST-INNERAGREE-A   1 SWAP AGREE ;
: TEST-INNERAGREE   ['] TEST-INNERAGREE-A OFFER AND ;
T{ TEST-INNERAGREE -> 1 }T

: TEST-OUTERAGREE-A   DROP 2 SWAP AGREE ;
: TEST-OUTERAGREE-B   ['] TEST-OUTERAGREE-A OFFER ;
: TEST-OUTERAGREE   ['] TEST-NOAGREE OFFER OR NIP
  ['] TEST-INNERAGREE OFFER OR NIP   ['] TEST-OUTERAGREE-B OFFER AND
  OFFERS @ FP0 = AND ;
T{ TEST-OUTERAGREE -> 0 1 2 }T

\ Class system

: TEST-TOP   TOP   DUP @ SWAP   CELL- DUP @ SWAP   DROP ;
T{ TEST-TOP -> 1 CELLS TOP }T

: >FROB   CELL+ ;
TOP CLONE FOO   2 ,
: TEST-FOO   FOO   DUP @ SWAP   CELL- DUP @ SWAP
  CELL- DUP @ SWAP   DROP   FOO >FROB @ ;
T{ TEST-FOO -> 2 CELLS TOP FOO 2 }T

FOO CLONE BAR   57 ,
: TEST-BAR   BAR   DUP @ SWAP   CELL- DUP @ SWAP
  CELL- DUP @ SWAP   CELL- DUP @ SWAP   DROP   BAR >FROB @ ;
T{ TEST-BAR -> 3 CELLS TOP FOO BAR 57 }T

BAR CLONE BAZ   179 ,
: TEST-BAZ   BAZ   DUP @ SWAP   CELL- DUP @ SWAP
  CELL- DUP @ SWAP   CELL- DUP @ SWAP   CELL- DUP @ SWAP
  DROP   BAZ >FROB @ ;
T{ TEST-BAZ -> 4 CELLS TOP FOO BAR BAZ 179 }T

: TEST-EXTENDS   FOO TOP EXTENDS   BAZ FOO EXTENDS
  BAR BAZ EXTENDS ;
T{ TEST-EXTENDS -> TRUE TRUE FALSE }T
